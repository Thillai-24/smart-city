# -*- coding: utf-8 -*-
"""smart.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Q083n7bfihyYmIWFbZKcKdwbiSiXQ5VT
"""

# Install dependencies (Run this first in Colab)
!pip install transformers torch gradio -q

# Import libraries
import gradio as gr
import torch
from transformers import AutoTokenizer, AutoModelForCausalLM

# Load model and tokenizer
model_name = "ibm-granite/granite-3.2-2b-instruct"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForCausalLM.from_pretrained(
    model_name,
    torch_dtype=torch.float16 if torch.cuda.is_available() else torch.float32,
    device_map="auto" if torch.cuda.is_available() else None
)

# Ensure pad token exists
if tokenizer.pad_token is None:
    tokenizer.pad_token = tokenizer.eos_token

# Function to generate response
def generate_response(prompt, max_length=512):
    inputs = tokenizer(prompt, return_tensors="pt", truncation=True, max_length=512)

    if torch.cuda.is_available():
        inputs = {k: v.to(model.device) for k, v in inputs.items()}

    with torch.no_grad():
        outputs = model.generate(
            **inputs,
            max_length=max_length,
            temperature=0.7,
            do_sample=True,
            pad_token_id=tokenizer.eos_token_id
        )

    response = tokenizer.decode(outputs[0], skip_special_tokens=True)
    response = response.replace(prompt, "").strip()
    return response

# Explain a concept
def concept_explanation(concept):
    prompt = f"Explain the concept of {concept} in detail with examples:"
    return generate_response(prompt, max_length=800)

# Generate quiz questions
def quiz_generator(concept):
    prompt = f"Generate 5 quiz questions about {concept} with different question types (multiple choice, true/false, short answer). At the end, provide all the correct answers."
    return generate_response(prompt, max_length=1000)

# Create Gradio Interface
with gr.Blocks() as app:
    gr.Markdown("## üßë‚Äçüè´ Educational AI Assistant")

    with gr.Tabs():
        with gr.Tab("Concept Explanation"):
            concept_input = gr.Textbox(label="Enter a concept")
            concept_output = gr.Textbox(label="Detailed Explanation")
            concept_button = gr.Button("Explain")
            concept_button.click(concept_explanation, inputs=concept_input, outputs=concept_output)

        with gr.Tab("Quiz Generator"):
            quiz_input = gr.Textbox(label="Enter a concept")
            quiz_output = gr.Textbox(label="Quiz Questions")
            quiz_button = gr.Button("Generate Quiz")
            quiz_button.click(quiz_generator, inputs=quiz_input, outputs=quiz_output)

# Launch the app
app.launch()

from google.colab import drive
drive.mount('/content/drive')

"""# New Section"""
